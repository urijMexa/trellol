(()=>{"use strict";new class{constructor(){this.columns=[{id:1,title:"TODO",cards:[]},{id:2,title:"IN PROGRESS",cards:[]},{id:3,title:"DONE",cards:[]}],this.init()}init(){this.loadState(),this.render(),this.setupEventListeners()}loadState(){const e=localStorage.getItem("trellolState");if(e){const t=JSON.parse(e);this.columns=t.columns}else this.columns[0].cards=[{id:Date.now()+1,text:"Welcome to Trellol"},{id:Date.now()+2,text:"This is a card."},{id:Date.now()+3,text:"Click on a card to see what's behind it."},{id:Date.now()+4,text:"- 💬 1"},{id:Date.now()+5,text:"- 💬 2"},{id:Date.now()+6,text:"You can attach pictures and files..."},{id:Date.now()+7,text:"... any kind of hyperlink ..."},{id:Date.now()+8,text:"- 💬 1"},{id:Date.now()+9,text:"... or checklists."},{id:Date.now()+10,text:"- 💬 1/3"}],this.columns[1].cards=[{id:Date.now()+11,text:"Invite your team to this board using the Add Members button"},{id:Date.now()+12,text:"Drag people onto a card to indicate that they're responsible for it."},{id:Date.now()+13,text:"Use color-coded labels for organization"},{id:Date.now()+14,text:"Make as many lists as you need!"},{id:Date.now()+15,text:"Try dragging cards anywhere."},{id:Date.now()+16,text:"Finished with a card? Archive it."}],this.columns[2].cards=[{id:Date.now()+17,text:"To learn more tricks, check out the guide."},{id:Date.now()+18,text:"Use as many boards as you want. We'll make more!"},{id:Date.now()+19,text:"Want to use keyboard shortcuts? We have them!"},{id:Date.now()+20,text:"Want updates on new features?"},{id:Date.now()+21,text:"Need help?"},{id:Date.now()+22,text:"☐"},{id:Date.now()+23,text:"Want current tips, usage examples, or API info?"},{id:Date.now()+24,text:"☐"}],this.saveState()}saveState(){localStorage.setItem("trellolState",JSON.stringify({columns:this.columns}))}render(){const e=document.getElementById("app");e.innerHTML="",this.columns.forEach(t=>{const a=this.createColumnElement(t);e.appendChild(a)})}createColumnElement(e){const t=document.createElement("div");t.className="column",t.dataset.columnId=e.id;const a=document.createElement("h2");a.textContent=e.title;const n=document.createElement("div");n.className="cards-container",e.cards.forEach(e=>{const t=this.createCardElement(e);n.appendChild(t)});const d=document.createElement("button");return d.className="add-card-btn",d.textContent="+ Add another card",d.addEventListener("click",()=>{this.showAddCardForm(t,e.id)}),t.appendChild(a),t.appendChild(n),t.appendChild(d),t}createCardElement(e){const t=document.createElement("div");t.className="card",t.draggable=!0,t.dataset.cardId=e.id;const a=document.createElement("p");a.textContent=e.text;const n=document.createElement("span");return n.className="delete-card",n.innerHTML="×",n.addEventListener("click",t=>{t.stopPropagation(),this.deleteCard(e.id)}),t.appendChild(a),t.appendChild(n),t.addEventListener("dragstart",a=>{a.dataTransfer.setData("text/plain",e.id.toString()),setTimeout(()=>{t.classList.add("dragging")},0)}),t.addEventListener("dragend",()=>{t.classList.remove("dragging")}),t}showAddCardForm(e,t){e.querySelector(".add-card-btn").style.display="none";const a=document.createElement("div");a.className="add-card-form";const n=document.createElement("textarea");n.placeholder="Enter a title for this card...",n.addEventListener("keydown",a=>{"Enter"!==a.key||a.shiftKey||(a.preventDefault(),this.addCard(t,n.value),this.removeAddCardForm(e))});const d=document.createElement("div");d.className="add-card-actions";const r=document.createElement("button");r.className="add-card-confirm",r.textContent="Add Card",r.addEventListener("click",()=>{this.addCard(t,n.value),this.removeAddCardForm(e)});const s=document.createElement("button");s.className="add-card-cancel",s.innerHTML="✗",s.addEventListener("click",()=>{this.removeAddCardForm(e)}),d.appendChild(r),d.appendChild(s),a.appendChild(n),a.appendChild(d),e.appendChild(a),n.focus()}removeAddCardForm(e){const t=e.querySelector(".add-card-form");t&&t.remove();const a=e.querySelector(".add-card-btn");a&&(a.style.display="block")}setupEventListeners(){document.getElementById("app").querySelectorAll(".column .cards-container").forEach(e=>{e.addEventListener("dragover",t=>{t.preventDefault();const a=this.getDragAfterElement(e,t.clientY),n=document.querySelector(".dragging");null==a?e.appendChild(n):e.insertBefore(n,a)}),e.addEventListener("drop",e=>{e.preventDefault();const t=parseInt(e.dataTransfer.getData("text/plain")),a=document.querySelector(`[data-card-id="${t}"]`),n=e.target.closest(".column"),d=parseInt(n.dataset.columnId);this.moveCard(t,d,this.getCardIndex(n.querySelector(".cards-container"),a))})})}getDragAfterElement(e,t){return[...e.querySelectorAll(".card:not(.dragging)")].reduce((e,a)=>{const n=a.getBoundingClientRect(),d=t-n.top-n.height/2;return d<0&&d>e.offset?{offset:d,element:a}:e},{offset:Number.NEGATIVE_INFINITY}).element}getCardIndex(e,t){return Array.from(e.children).indexOf(t)}addCard(e,t){if(t&&t.trim()){const a={id:Date.now(),text:t.trim()};this.columns.find(t=>t.id===e).cards.push(a),this.saveState(),this.render(),this.setupEventListeners()}}deleteCard(e){for(const t of this.columns){const a=t.cards.findIndex(t=>t.id===e);if(-1!==a){t.cards.splice(a,1),this.saveState(),this.render(),this.setupEventListeners();break}}}moveCard(e,t,a){let n=null,d=null;for(const t of this.columns){const a=t.cards.findIndex(t=>t.id===e);if(-1!==a){n=t.cards[a],d=t.id,t.cards.splice(a,1);break}}n&&(this.columns.find(e=>e.id===t).cards.splice(a,0,n),this.saveState())}}})();